name: CI/CD

on: [push, workflow_dispatch]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [7.1, 7.2, 7.3, 7.4]
        type: ['', '-prod']

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: docker-buildx-${{ matrix.version }}${{ matrix.type }}-${{ github.sha }}
          restore-keys: docker-buildx-${{ matrix.version }}${{ matrix.type }}-

      - name: Build
        run: |
          docker buildx build \
            --cache-from type=local,src=/tmp/.buildx-cache/${{ matrix.version }}${{ matrix.type }} \
            --cache-to type=local,dest=/tmp/.buildx-cache/${{ matrix.version }}${{ matrix.type }} \
            --output type=docker \
            --tag kooldev/php:${{ matrix.version }}${{ matrix.type }} \
            ${{ matrix.version }}${{ matrix.type }}

      - name: Build (nginx)
        run: |
          docker buildx build \
            --cache-from type=local,src=/tmp/.buildx-cache/${{ matrix.version }}-nginx${{ matrix.type }} \
            --cache-to type=local,dest=/tmp/.buildx-cache/${{ matrix.version }}-nginx${{ matrix.type }} \
            --output type=docker \
            --tag kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }} \
            ${{ matrix.version }}-nginx${{ matrix.type }}

      - name: Tests
        run: |
          for suffix in '' -nginx; do
            docker run kooldev/php:${{ matrix.version }}$suffix${{ matrix.type }} php -v
            docker run kooldev/php:${{ matrix.version }}$suffix${{ matrix.type }} composer -V
            docker run -e ASUSER=1000 kooldev/php:${{ matrix.version }}$suffix${{ matrix.type }} php -v
            docker run -e ASUSER=1000 kooldev/php:${{ matrix.version }}$suffix${{ matrix.type }} composer -V
            docker run kooldev/php:${{ matrix.version }}$suffix${{ matrix.type }} php -m
            docker run -e ENABLE_XDEBUG=true kooldev/php:${{ matrix.version }}$suffix${{ matrix.type }} php -m
          done

          docker run kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }} nginx -v
          docker run kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }} supervisord version

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: github.ref == 'refs/heads/master' && github.repository == 'kool-dev/docker-php'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub
        if: github.ref == 'refs/heads/master' && github.repository == 'kool-dev/docker-php'
        run: |
          docker push kooldev/php:${{ matrix.version }}${{ matrix.type }}
          docker push kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }}

  trigger-wordpress:
    name: Trigger docker-wordpress
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trigger build on kool-dev/docker-wordpress
        uses: benc-uk/workflow-dispatch@v1.1
        if: github.ref == 'refs/heads/master' && github.repository == 'kool-dev/docker-php'
        with:
          workflow: CI
          repo: kool-dev/docker-wordpress
          token: ${{ secrets.WORKFLOW_TOKEN }}
