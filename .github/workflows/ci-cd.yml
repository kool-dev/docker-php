name: CI/CD

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version: ['8.0', '8.1', '8.2', '8.3', '8.4']
        type: ['', '-prod']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        if: github.ref == 'refs/heads/master' && github.repository == 'kool-dev/docker-php'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.version }}${{ matrix.type }}
          load: true
          tags: kooldev/php:${{ matrix.version }}${{ matrix.type }}

      - name: Tests
        run: |
          docker run kooldev/php:${{ matrix.version }}${{ matrix.type }} php -v
          docker run kooldev/php:${{ matrix.version }}${{ matrix.type }} composer -V
          docker run kooldev/php:${{ matrix.version }}${{ matrix.type }} composer1 -V
          docker run -e ASUSER=1000 kooldev/php:${{ matrix.version }}${{ matrix.type }} php -v
          docker run -e ASUSER=1000 kooldev/php:${{ matrix.version }}${{ matrix.type }} composer -V
          docker run -e ASUSER=1000 kooldev/php:${{ matrix.version }}${{ matrix.type }} composer1 -V
          docker run kooldev/php:${{ matrix.version }}${{ matrix.type }} php -m | grep readline
          docker run -e ENABLE_XDEBUG=true kooldev/php:${{ matrix.version }}${{ matrix.type }} php -m

      - name: Build and push
        uses: docker/build-push-action@v6
        if: github.ref == 'refs/heads/master' && github.repository == 'kool-dev/docker-php'
        with:
          context: ${{ matrix.version }}${{ matrix.type }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: kooldev/php:${{ matrix.version }}${{ matrix.type }}

      - name: Build and export to Docker (nginx)
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.version }}-nginx${{ matrix.type }}
          load: true
          tags: kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }}

      - name: Build and export to Docker (Node)
        uses: docker/build-push-action@v6
        if: matrix.type  == ''
        with:
          context: ${{ matrix.version }}-node${{ matrix.type }}
          load: true
          tags: kooldev/php:${{ matrix.version }}-node${{ matrix.type }}

      - name: Tests (Node)
        if: matrix.type  == ''
        run: |
          docker run kooldev/php:${{ matrix.version }}-node${{ matrix.type }} node -v
          docker run kooldev/php:${{ matrix.version }}-node${{ matrix.type }} npm -v
          docker run kooldev/php:${{ matrix.version }}-node${{ matrix.type }} yarn -v

      - name: Tests (nginx)
        run: |
          docker run kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }} php -v
          docker run kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }} composer -V
          docker run kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }} composer1 -V
          docker run -e ASUSER=1000 kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }} php -v
          docker run -e ASUSER=1000 kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }} composer -V
          docker run -e ASUSER=1000 kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }} composer1 -V
          docker run kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }} php -m | grep readline
          docker run -e ENABLE_XDEBUG=true kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }} php -m

          docker run kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }} nginx -v
          docker run kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }} supervisord version

      - name: Build and push (nginx)
        uses: docker/build-push-action@v6
        if: github.ref == 'refs/heads/master' && github.repository == 'kool-dev/docker-php'
        with:
          context: ${{ matrix.version }}-nginx${{ matrix.type }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: kooldev/php:${{ matrix.version }}-nginx${{ matrix.type }}

      - name: Build and push (Node)
        uses: docker/build-push-action@v6
        if: github.ref == 'refs/heads/master' && github.repository == 'kool-dev/docker-php' && matrix.type  == ''
        with:
          context: ${{ matrix.version }}-node${{ matrix.type }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: kooldev/php:${{ matrix.version }}-node${{ matrix.type }}

  trigger-build-wordpress:
    name: Trigger Wordpress Build
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trigger build on kool-dev/docker-wordpress
        uses: benc-uk/workflow-dispatch@v1.2
        if: github.ref == 'refs/heads/master' && github.repository == 'kool-dev/docker-php'
        with:
          workflow: CI/CD
          repo: kool-dev/docker-wordpress
          token: ${{ secrets.WORKFLOW_TOKEN }}

  trigger-extended-builds:
    name: Trigger Extended Builds
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        image:
          - kool-dev/docker-php-sqlsrv
          - kool-dev/docker-php-swoole
          - kool-dev/docker-phpqa
    steps:
      - name: Trigger build on ${{ matrix.image }}
        uses: benc-uk/workflow-dispatch@v1.2
        if: github.ref == 'refs/heads/master' && github.repository == 'kool-dev/docker-php'
        with:
          workflow: CI/CD
          ref: refs/heads/main
          repo: ${{ matrix.image }}
          token: ${{ secrets.WORKFLOW_TOKEN }}
